name: Release and Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up deployment environment
        run: |
          echo "EC2_HOST=${{ secrets.PROD_EC2_HOST }}" >> $GITHUB_ENV
          echo "EC2_USER=${{ secrets.PROD_EC2_USER }}" >> $GITHUB_ENV
          echo "EC2_KEY=${{ secrets.PROD_EC2_KEY }}" >> $GITHUB_ENV
          echo "ENV_NAME=production" >> $GITHUB_ENV

      - name: Create deployment package
        run: |
          mkdir deploy_package
          cp -r src public scripts package.json package-lock.json .env.example deploy_package/
          tar -czf deployment.tar.gz -C deploy_package .

      - name: Deploy to EC2
        run: |
          echo "- Deploying to $ENV_NAME environment..."
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem

          scp -o StrictHostKeyChecking=no -i private_key.pem deployment.tar.gz $EC2_USER@$EC2_HOST:/tmp/

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST "/var/www/app/scripts/deploy.sh"

  create-release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
